
#n/** Configure pins as #n #t#t #t* Analog #n #t#t #t* Input #n #t#t #t* Output#n #t#t #t* EVENT_OUT#n #t#t #t* EXTI
*/
static void MX_GPIO_Init(void)
{
#n
#tGPIO_InitTypeDef GPIO_InitStruct;
#n#t/* GPIO Ports Clock Enable */
#t__HAL_RCC_GPIOA_CLK_ENABLE();
#t__HAL_RCC_GPIOB_CLK_ENABLE();
#n#t/*Configure GPIO pin Output Level */
#tHAL_GPIO_WritePin(GPIOA, RS_Pin|EN_Pin|D4_Pin|D5_Pin #n#t#t#t#t#t#t#t#t#t#t#t#t#t|D6_Pin|D7_Pin, GPIO_PIN_RESET);
#n#t/*Configure GPIO pins : RS_Pin EN_Pin D4_Pin D5_Pin #n#t#t#t#t#t#t#t#t#t#t#t#t#t D6_Pin D7_Pin */
#tGPIO_InitStruct.Pin = RS_Pin|EN_Pin|D4_Pin|D5_Pin #n#t#t#t#t#t#t#t#t#t#t#t#t#t|D6_Pin|D7_Pin;
#tGPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
#tGPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
#tHAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
#n#t/*Configure GPIO pin : sensor_Pin */
#tGPIO_InitStruct.Pin = sensor_Pin;
#tGPIO_InitStruct.Mode = GPIO_MODE_INPUT;
#tGPIO_InitStruct.Pull = GPIO_PULLUP;
#tHAL_GPIO_Init(sensor_GPIO_Port, &GPIO_InitStruct);
#n#t/*Configure GPIO pins : pbStartStop_Pin pbReset_Pin */
#tGPIO_InitStruct.Pin = pbStartStop_Pin|pbReset_Pin;
#tGPIO_InitStruct.Mode = GPIO_MODE_INPUT;
#tGPIO_InitStruct.Pull = GPIO_PULLUP;
#tHAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
#n
}
#n
